const multer = require("multer");
const helperWrapper = require("../helpers/wrapper");
const storage = multer.diskStorage({
  destination(req, file, cb) {
    cb(null, "public/uploads/product");
  },
  filename(req, file, cb) {
    cb(null, new Date().toISOString().replace(/:/g, "-") + file.originalname);
  }
});
const upload = multer({
  storage,
  fileFilter: (req, file, cb) => {
    if (file.mimetype === "image/png" || file.mimetype === "image/jpg" || file.mimetype === "image/jpeg") {
      cb(null, true);
    } else {
      cb(null, false);
      return cb(new Error("Only .png, .jpg and .jpeg format allowed!"));
    }
  },
  limits: {
    fileSize: 1024 * 1024
  }
}).single("image");
const uploadFilter = (req, res, next) => {
  upload(req, res, err => {
    if (err instanceof multer.MulterError) {
      // A Multer error occurred when uploading.
      return helperWrapper.response(res, 401, err.message, null);
    }
    if (err) {
      // An unknown error occurred when uploading.
      return helperWrapper.response(res, 401, err.message, null);
    }
    next();
    // Everything went fine.
  });
};

module.exports = uploadFilter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtdWx0ZXIiLCJyZXF1aXJlIiwiaGVscGVyV3JhcHBlciIsInN0b3JhZ2UiLCJkaXNrU3RvcmFnZSIsImRlc3RpbmF0aW9uIiwicmVxIiwiZmlsZSIsImNiIiwiZmlsZW5hbWUiLCJEYXRlIiwidG9JU09TdHJpbmciLCJyZXBsYWNlIiwib3JpZ2luYWxuYW1lIiwidXBsb2FkIiwiZmlsZUZpbHRlciIsIm1pbWV0eXBlIiwiRXJyb3IiLCJsaW1pdHMiLCJmaWxlU2l6ZSIsInNpbmdsZSIsInVwbG9hZEZpbHRlciIsInJlcyIsIm5leHQiLCJlcnIiLCJNdWx0ZXJFcnJvciIsInJlc3BvbnNlIiwibWVzc2FnZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvbWlkZGxld2FyZS91cGxvYWRQcm9kdWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG11bHRlciA9IHJlcXVpcmUoXCJtdWx0ZXJcIik7XG5jb25zdCBoZWxwZXJXcmFwcGVyID0gcmVxdWlyZShcIi4uL2hlbHBlcnMvd3JhcHBlclwiKTtcblxuY29uc3Qgc3RvcmFnZSA9IG11bHRlci5kaXNrU3RvcmFnZSh7XG4gIGRlc3RpbmF0aW9uKHJlcSwgZmlsZSwgY2IpIHtcbiAgICBjYihudWxsLCBcInB1YmxpYy91cGxvYWRzL3Byb2R1Y3RcIik7XG4gIH0sXG5cbiAgZmlsZW5hbWUocmVxLCBmaWxlLCBjYikge1xuICAgIGNiKG51bGwsIG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKS5yZXBsYWNlKC86L2csIFwiLVwiKSArIGZpbGUub3JpZ2luYWxuYW1lKTtcbiAgfSxcbn0pO1xuXG5jb25zdCB1cGxvYWQgPSBtdWx0ZXIoe1xuICBzdG9yYWdlLFxuICBmaWxlRmlsdGVyOiAocmVxLCBmaWxlLCBjYikgPT4ge1xuICAgIGlmIChcbiAgICAgIGZpbGUubWltZXR5cGUgPT09IFwiaW1hZ2UvcG5nXCIgfHxcbiAgICAgIGZpbGUubWltZXR5cGUgPT09IFwiaW1hZ2UvanBnXCIgfHxcbiAgICAgIGZpbGUubWltZXR5cGUgPT09IFwiaW1hZ2UvanBlZ1wiXG4gICAgKSB7XG4gICAgICBjYihudWxsLCB0cnVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY2IobnVsbCwgZmFsc2UpO1xuICAgICAgcmV0dXJuIGNiKG5ldyBFcnJvcihcIk9ubHkgLnBuZywgLmpwZyBhbmQgLmpwZWcgZm9ybWF0IGFsbG93ZWQhXCIpKTtcbiAgICB9XG4gIH0sXG4gIGxpbWl0czogeyBmaWxlU2l6ZTogMTAyNCAqIDEwMjQgfSxcbn0pLnNpbmdsZShcImltYWdlXCIpO1xuXG5jb25zdCB1cGxvYWRGaWx0ZXIgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgdXBsb2FkKHJlcSwgcmVzLCAoZXJyKSA9PiB7XG4gICAgaWYgKGVyciBpbnN0YW5jZW9mIG11bHRlci5NdWx0ZXJFcnJvcikge1xuICAgICAgLy8gQSBNdWx0ZXIgZXJyb3Igb2NjdXJyZWQgd2hlbiB1cGxvYWRpbmcuXG4gICAgICByZXR1cm4gaGVscGVyV3JhcHBlci5yZXNwb25zZShyZXMsIDQwMSwgZXJyLm1lc3NhZ2UsIG51bGwpO1xuICAgIH1cbiAgICBpZiAoZXJyKSB7XG4gICAgICAvLyBBbiB1bmtub3duIGVycm9yIG9jY3VycmVkIHdoZW4gdXBsb2FkaW5nLlxuICAgICAgcmV0dXJuIGhlbHBlcldyYXBwZXIucmVzcG9uc2UocmVzLCA0MDEsIGVyci5tZXNzYWdlLCBudWxsKTtcbiAgICB9XG4gICAgbmV4dCgpO1xuICAgIC8vIEV2ZXJ5dGhpbmcgd2VudCBmaW5lLlxuICB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gdXBsb2FkRmlsdGVyO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxRQUFRLENBQUM7QUFDaEMsTUFBTUMsYUFBYSxHQUFHRCxPQUFPLENBQUMsb0JBQW9CLENBQUM7QUFFbkQsTUFBTUUsT0FBTyxHQUFHSCxNQUFNLENBQUNJLFdBQVcsQ0FBQztFQUNqQ0MsV0FBV0EsQ0FBQ0MsR0FBRyxFQUFFQyxJQUFJLEVBQUVDLEVBQUUsRUFBRTtJQUN6QkEsRUFBRSxDQUFDLElBQUksRUFBRSx3QkFBd0IsQ0FBQztFQUNwQyxDQUFDO0VBRURDLFFBQVFBLENBQUNILEdBQUcsRUFBRUMsSUFBSSxFQUFFQyxFQUFFLEVBQUU7SUFDdEJBLEVBQUUsQ0FBQyxJQUFJLEVBQUUsSUFBSUUsSUFBSSxDQUFDLENBQUMsQ0FBQ0MsV0FBVyxDQUFDLENBQUMsQ0FBQ0MsT0FBTyxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsR0FBR0wsSUFBSSxDQUFDTSxZQUFZLENBQUM7RUFDM0U7QUFDRixDQUFDLENBQUM7QUFFRixNQUFNQyxNQUFNLEdBQUdkLE1BQU0sQ0FBQztFQUNwQkcsT0FBTztFQUNQWSxVQUFVLEVBQUVBLENBQUNULEdBQUcsRUFBRUMsSUFBSSxFQUFFQyxFQUFFLEtBQUs7SUFDN0IsSUFDRUQsSUFBSSxDQUFDUyxRQUFRLEtBQUssV0FBVyxJQUM3QlQsSUFBSSxDQUFDUyxRQUFRLEtBQUssV0FBVyxJQUM3QlQsSUFBSSxDQUFDUyxRQUFRLEtBQUssWUFBWSxFQUM5QjtNQUNBUixFQUFFLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQztJQUNoQixDQUFDLE1BQU07TUFDTEEsRUFBRSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUM7TUFDZixPQUFPQSxFQUFFLENBQUMsSUFBSVMsS0FBSyxDQUFDLDJDQUEyQyxDQUFDLENBQUM7SUFDbkU7RUFDRixDQUFDO0VBQ0RDLE1BQU0sRUFBRTtJQUFFQyxRQUFRLEVBQUUsSUFBSSxHQUFHO0VBQUs7QUFDbEMsQ0FBQyxDQUFDLENBQUNDLE1BQU0sQ0FBQyxPQUFPLENBQUM7QUFFbEIsTUFBTUMsWUFBWSxHQUFHQSxDQUFDZixHQUFHLEVBQUVnQixHQUFHLEVBQUVDLElBQUksS0FBSztFQUN2Q1QsTUFBTSxDQUFDUixHQUFHLEVBQUVnQixHQUFHLEVBQUdFLEdBQUcsSUFBSztJQUN4QixJQUFJQSxHQUFHLFlBQVl4QixNQUFNLENBQUN5QixXQUFXLEVBQUU7TUFDckM7TUFDQSxPQUFPdkIsYUFBYSxDQUFDd0IsUUFBUSxDQUFDSixHQUFHLEVBQUUsR0FBRyxFQUFFRSxHQUFHLENBQUNHLE9BQU8sRUFBRSxJQUFJLENBQUM7SUFDNUQ7SUFDQSxJQUFJSCxHQUFHLEVBQUU7TUFDUDtNQUNBLE9BQU90QixhQUFhLENBQUN3QixRQUFRLENBQUNKLEdBQUcsRUFBRSxHQUFHLEVBQUVFLEdBQUcsQ0FBQ0csT0FBTyxFQUFFLElBQUksQ0FBQztJQUM1RDtJQUNBSixJQUFJLENBQUMsQ0FBQztJQUNOO0VBQ0YsQ0FBQyxDQUFDO0FBQ0osQ0FBQzs7QUFFREssTUFBTSxDQUFDQyxPQUFPLEdBQUdSLFlBQVkifQ==