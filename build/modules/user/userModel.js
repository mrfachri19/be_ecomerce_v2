const connection = require("../../config/mysql");
module.exports = {
  register: data => new Promise((resolve, reject) => {
    connection.query("INSERT INTO users SET?", data, (error, result) => {
      if (!error) {
        const newResult = {
          id: result.insertId,
          ...data
        };
        delete newResult.password;
        resolve(newResult);
      } else {
        reject(new Error(`SQL:${error.sqlMessage}`));
      }
    });
  }),
  getUserById: id => new Promise((resolve, reject) => {
    connection.query("SELECT * FROM user WHERE id = ?", id, (error, results) => {
      if (!error) {
        const newResults = results;
        // delete newResults[0].password;
        resolve(newResults);
      } else {
        reject(new Error(`Message ${error.message}`));
      }
    });
  }),
  updateProfile: (data, id) => new Promise((resolve, reject) => {
    connection.query("UPDATE user SET ? WHERE id = ?", [data, id], (error, results) => {
      if (!error) {
        const newResult = {
          id,
          ...data
        };
        resolve(newResult);
      } else {
        reject(new Error(`Message ${error.message}`));
      }
    });
  })
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb25uZWN0aW9uIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZWdpc3RlciIsImRhdGEiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInF1ZXJ5IiwiZXJyb3IiLCJyZXN1bHQiLCJuZXdSZXN1bHQiLCJpZCIsImluc2VydElkIiwicGFzc3dvcmQiLCJFcnJvciIsInNxbE1lc3NhZ2UiLCJnZXRVc2VyQnlJZCIsInJlc3VsdHMiLCJuZXdSZXN1bHRzIiwibWVzc2FnZSIsInVwZGF0ZVByb2ZpbGUiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbW9kdWxlcy91c2VyL3VzZXJNb2RlbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb25uZWN0aW9uID0gcmVxdWlyZShcIi4uLy4uL2NvbmZpZy9teXNxbFwiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHJlZ2lzdGVyOiAoZGF0YSkgPT5cbiAgICBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBjb25uZWN0aW9uLnF1ZXJ5KFwiSU5TRVJUIElOVE8gdXNlcnMgU0VUP1wiLCBkYXRhLCAoZXJyb3IsIHJlc3VsdCkgPT4ge1xuICAgICAgICBpZiAoIWVycm9yKSB7XG4gICAgICAgICAgY29uc3QgbmV3UmVzdWx0ID0ge1xuICAgICAgICAgICAgaWQ6IHJlc3VsdC5pbnNlcnRJZCxcbiAgICAgICAgICAgIC4uLmRhdGEsXG4gICAgICAgICAgfTtcbiAgICAgICAgICBkZWxldGUgbmV3UmVzdWx0LnBhc3N3b3JkO1xuICAgICAgICAgIHJlc29sdmUobmV3UmVzdWx0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZWplY3QobmV3IEVycm9yKGBTUUw6JHtlcnJvci5zcWxNZXNzYWdlfWApKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSksXG4gIGdldFVzZXJCeUlkOiAoaWQpID0+XG4gICAgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgY29ubmVjdGlvbi5xdWVyeShcbiAgICAgICAgXCJTRUxFQ1QgKiBGUk9NIHVzZXIgV0hFUkUgaWQgPSA/XCIsXG4gICAgICAgIGlkLFxuICAgICAgICAoZXJyb3IsIHJlc3VsdHMpID0+IHtcbiAgICAgICAgICBpZiAoIWVycm9yKSB7XG4gICAgICAgICAgICBjb25zdCBuZXdSZXN1bHRzID0gcmVzdWx0cztcbiAgICAgICAgICAgIC8vIGRlbGV0ZSBuZXdSZXN1bHRzWzBdLnBhc3N3b3JkO1xuICAgICAgICAgICAgcmVzb2x2ZShuZXdSZXN1bHRzKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihgTWVzc2FnZSAke2Vycm9yLm1lc3NhZ2V9YCkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgKTtcbiAgICB9KSxcblxuICB1cGRhdGVQcm9maWxlOiAoZGF0YSwgaWQpID0+XG4gICAgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgY29ubmVjdGlvbi5xdWVyeShcbiAgICAgICAgXCJVUERBVEUgdXNlciBTRVQgPyBXSEVSRSBpZCA9ID9cIixcbiAgICAgICAgW2RhdGEsIGlkXSxcbiAgICAgICAgKGVycm9yLCByZXN1bHRzKSA9PiB7XG4gICAgICAgICAgaWYgKCFlcnJvcikge1xuICAgICAgICAgICAgY29uc3QgbmV3UmVzdWx0ID0ge1xuICAgICAgICAgICAgICBpZCxcbiAgICAgICAgICAgICAgLi4uZGF0YSxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXNvbHZlKG5ld1Jlc3VsdCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoYE1lc3NhZ2UgJHtlcnJvci5tZXNzYWdlfWApKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICk7XG4gICAgfSksXG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQztBQUVoREMsTUFBTSxDQUFDQyxPQUFPLEdBQUc7RUFDZkMsUUFBUSxFQUFHQyxJQUFJLElBQ2IsSUFBSUMsT0FBTyxDQUFDLENBQUNDLE9BQU8sRUFBRUMsTUFBTSxLQUFLO0lBQy9CUixVQUFVLENBQUNTLEtBQUssQ0FBQyx3QkFBd0IsRUFBRUosSUFBSSxFQUFFLENBQUNLLEtBQUssRUFBRUMsTUFBTSxLQUFLO01BQ2xFLElBQUksQ0FBQ0QsS0FBSyxFQUFFO1FBQ1YsTUFBTUUsU0FBUyxHQUFHO1VBQ2hCQyxFQUFFLEVBQUVGLE1BQU0sQ0FBQ0csUUFBUTtVQUNuQixHQUFHVDtRQUNMLENBQUM7UUFDRCxPQUFPTyxTQUFTLENBQUNHLFFBQVE7UUFDekJSLE9BQU8sQ0FBQ0ssU0FBUyxDQUFDO01BQ3BCLENBQUMsTUFBTTtRQUNMSixNQUFNLENBQUMsSUFBSVEsS0FBSyxDQUFFLE9BQU1OLEtBQUssQ0FBQ08sVUFBVyxFQUFDLENBQUMsQ0FBQztNQUM5QztJQUNGLENBQUMsQ0FBQztFQUNKLENBQUMsQ0FBQztFQUNKQyxXQUFXLEVBQUdMLEVBQUUsSUFDZCxJQUFJUCxPQUFPLENBQUMsQ0FBQ0MsT0FBTyxFQUFFQyxNQUFNLEtBQUs7SUFDL0JSLFVBQVUsQ0FBQ1MsS0FBSyxDQUNkLGlDQUFpQyxFQUNqQ0ksRUFBRSxFQUNGLENBQUNILEtBQUssRUFBRVMsT0FBTyxLQUFLO01BQ2xCLElBQUksQ0FBQ1QsS0FBSyxFQUFFO1FBQ1YsTUFBTVUsVUFBVSxHQUFHRCxPQUFPO1FBQzFCO1FBQ0FaLE9BQU8sQ0FBQ2EsVUFBVSxDQUFDO01BQ3JCLENBQUMsTUFBTTtRQUNMWixNQUFNLENBQUMsSUFBSVEsS0FBSyxDQUFFLFdBQVVOLEtBQUssQ0FBQ1csT0FBUSxFQUFDLENBQUMsQ0FBQztNQUMvQztJQUNGLENBQ0YsQ0FBQztFQUNILENBQUMsQ0FBQztFQUVKQyxhQUFhLEVBQUVBLENBQUNqQixJQUFJLEVBQUVRLEVBQUUsS0FDdEIsSUFBSVAsT0FBTyxDQUFDLENBQUNDLE9BQU8sRUFBRUMsTUFBTSxLQUFLO0lBQy9CUixVQUFVLENBQUNTLEtBQUssQ0FDZCxnQ0FBZ0MsRUFDaEMsQ0FBQ0osSUFBSSxFQUFFUSxFQUFFLENBQUMsRUFDVixDQUFDSCxLQUFLLEVBQUVTLE9BQU8sS0FBSztNQUNsQixJQUFJLENBQUNULEtBQUssRUFBRTtRQUNWLE1BQU1FLFNBQVMsR0FBRztVQUNoQkMsRUFBRTtVQUNGLEdBQUdSO1FBQ0wsQ0FBQztRQUNERSxPQUFPLENBQUNLLFNBQVMsQ0FBQztNQUNwQixDQUFDLE1BQU07UUFDTEosTUFBTSxDQUFDLElBQUlRLEtBQUssQ0FBRSxXQUFVTixLQUFLLENBQUNXLE9BQVEsRUFBQyxDQUFDLENBQUM7TUFDL0M7SUFDRixDQUNGLENBQUM7RUFDSCxDQUFDO0FBQ0wsQ0FBQyJ9