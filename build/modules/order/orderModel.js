const connection = require("../../config/mysql");
// const { getOrderByUserId } = require("./orderController")

module.exports = {
  postOrder: data => new Promise((resolve, reject) => {
    connection.query("INSERT INTO `order` SET ?", data, (err, result) => {
      if (!err) {
        const newResult = {
          id: result.insertId,
          ...data
        };
        resolve(newResult);
      } else {
        reject(new Error(`SQL: ${err.sqlMessage}`));
      }
    });
  }),
  postOrderItem: data => new Promise((resolve, reject) => {
    connection.query("INSERT INTO `orderItem` SET ?", data, (err, result) => {
      if (!err) {
        resolve(result);
      } else {
        reject(new Error(`SQL: ${err.sqlMessage}`));
      }
    });
  }),
  getOrderByUserId: idUser => new Promise((resolve, reject) => {
    connection.query("SELECT * FROM `order` WHERE idUser = ?", idUser, (error, result) => {
      if (!error) {
        resolve(result);
      } else {
        reject(new Error(`SQL: ${error.sqlMessage}`));
      }
    });
  }),
  getOrderId: id => new Promise((resolve, reject) => {
    connection.query("SELECT * FROM `order` WHERE id = ?", id, (error, result) => {
      if (!error) {
        resolve(result);
      } else new Error(`SQL:${error.sqlMessage}`);
    });
  }),
  deleteOrder: id => new Promise((resolve, reject) => {
    connection.query("DELETE FROM `order` WHERE id=?", id, (error, result) => {
      if (!error) {
        resolve(id);
      } else {
        reject(new Error(`SQL : ${error.sqlMessage}`));
      }
    });
  })
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb25uZWN0aW9uIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJwb3N0T3JkZXIiLCJkYXRhIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJxdWVyeSIsImVyciIsInJlc3VsdCIsIm5ld1Jlc3VsdCIsImlkIiwiaW5zZXJ0SWQiLCJFcnJvciIsInNxbE1lc3NhZ2UiLCJwb3N0T3JkZXJJdGVtIiwiZ2V0T3JkZXJCeVVzZXJJZCIsImlkVXNlciIsImVycm9yIiwiZ2V0T3JkZXJJZCIsImRlbGV0ZU9yZGVyIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL21vZHVsZXMvb3JkZXIvb3JkZXJNb2RlbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb25uZWN0aW9uID0gcmVxdWlyZShcIi4uLy4uL2NvbmZpZy9teXNxbFwiKTtcbi8vIGNvbnN0IHsgZ2V0T3JkZXJCeVVzZXJJZCB9ID0gcmVxdWlyZShcIi4vb3JkZXJDb250cm9sbGVyXCIpXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBwb3N0T3JkZXI6IChkYXRhKSA9PlxuICAgIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGNvbm5lY3Rpb24ucXVlcnkoXCJJTlNFUlQgSU5UTyBgb3JkZXJgIFNFVCA/XCIsIGRhdGEsIChlcnIsIHJlc3VsdCkgPT4ge1xuICAgICAgICBpZiAoIWVycikge1xuICAgICAgICAgIGNvbnN0IG5ld1Jlc3VsdCA9IHtcbiAgICAgICAgICAgIGlkOiByZXN1bHQuaW5zZXJ0SWQsXG4gICAgICAgICAgICAuLi5kYXRhLFxuICAgICAgICAgIH07XG4gICAgICAgICAgcmVzb2x2ZShuZXdSZXN1bHQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoYFNRTDogJHtlcnIuc3FsTWVzc2FnZX1gKSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pLFxuXG4gIHBvc3RPcmRlckl0ZW06IChkYXRhKSA9PlxuICAgIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGNvbm5lY3Rpb24ucXVlcnkoXCJJTlNFUlQgSU5UTyBgb3JkZXJJdGVtYCBTRVQgP1wiLCBkYXRhLCAoZXJyLCByZXN1bHQpID0+IHtcbiAgICAgICAgaWYgKCFlcnIpIHtcbiAgICAgICAgICByZXNvbHZlKHJlc3VsdCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihgU1FMOiAke2Vyci5zcWxNZXNzYWdlfWApKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSksXG5cbiAgZ2V0T3JkZXJCeVVzZXJJZDogKGlkVXNlcikgPT5cbiAgICBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBjb25uZWN0aW9uLnF1ZXJ5KFxuICAgICAgICBcIlNFTEVDVCAqIEZST00gYG9yZGVyYCBXSEVSRSBpZFVzZXIgPSA/XCIsXG4gICAgICAgIGlkVXNlcixcbiAgICAgICAgKGVycm9yLCByZXN1bHQpID0+IHtcbiAgICAgICAgICBpZiAoIWVycm9yKSB7XG4gICAgICAgICAgICByZXNvbHZlKHJlc3VsdCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoYFNRTDogJHtlcnJvci5zcWxNZXNzYWdlfWApKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICk7XG4gICAgfSksXG4gIGdldE9yZGVySWQ6IChpZCkgPT5cbiAgICBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBjb25uZWN0aW9uLnF1ZXJ5KFxuICAgICAgICBcIlNFTEVDVCAqIEZST00gYG9yZGVyYCBXSEVSRSBpZCA9ID9cIixcbiAgICAgICAgaWQsXG4gICAgICAgIChlcnJvciwgcmVzdWx0KSA9PiB7XG4gICAgICAgICAgaWYgKCFlcnJvcikge1xuICAgICAgICAgICAgcmVzb2x2ZShyZXN1bHQpO1xuICAgICAgICAgIH0gZWxzZSBuZXcgRXJyb3IoYFNRTDoke2Vycm9yLnNxbE1lc3NhZ2V9YCk7XG4gICAgICAgIH1cbiAgICAgICk7XG4gICAgfSksXG4gIGRlbGV0ZU9yZGVyOiAoaWQpID0+XG4gICAgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgY29ubmVjdGlvbi5xdWVyeShcbiAgICAgICAgXCJERUxFVEUgRlJPTSBgb3JkZXJgIFdIRVJFIGlkPT9cIixcbiAgICAgICAgaWQsXG4gICAgICAgIChlcnJvciwgcmVzdWx0KSA9PiB7XG4gICAgICAgICAgaWYgKCFlcnJvcikge1xuICAgICAgICAgICAgcmVzb2x2ZShpZCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoYFNRTCA6ICR7ZXJyb3Iuc3FsTWVzc2FnZX1gKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICApO1xuICAgIH0pLFxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsVUFBVSxHQUFHQyxPQUFPLENBQUMsb0JBQW9CLENBQUM7QUFDaEQ7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHO0VBQ2ZDLFNBQVMsRUFBR0MsSUFBSSxJQUNkLElBQUlDLE9BQU8sQ0FBQyxDQUFDQyxPQUFPLEVBQUVDLE1BQU0sS0FBSztJQUMvQlIsVUFBVSxDQUFDUyxLQUFLLENBQUMsMkJBQTJCLEVBQUVKLElBQUksRUFBRSxDQUFDSyxHQUFHLEVBQUVDLE1BQU0sS0FBSztNQUNuRSxJQUFJLENBQUNELEdBQUcsRUFBRTtRQUNSLE1BQU1FLFNBQVMsR0FBRztVQUNoQkMsRUFBRSxFQUFFRixNQUFNLENBQUNHLFFBQVE7VUFDbkIsR0FBR1Q7UUFDTCxDQUFDO1FBQ0RFLE9BQU8sQ0FBQ0ssU0FBUyxDQUFDO01BQ3BCLENBQUMsTUFBTTtRQUNMSixNQUFNLENBQUMsSUFBSU8sS0FBSyxDQUFFLFFBQU9MLEdBQUcsQ0FBQ00sVUFBVyxFQUFDLENBQUMsQ0FBQztNQUM3QztJQUNGLENBQUMsQ0FBQztFQUNKLENBQUMsQ0FBQztFQUVKQyxhQUFhLEVBQUdaLElBQUksSUFDbEIsSUFBSUMsT0FBTyxDQUFDLENBQUNDLE9BQU8sRUFBRUMsTUFBTSxLQUFLO0lBQy9CUixVQUFVLENBQUNTLEtBQUssQ0FBQywrQkFBK0IsRUFBRUosSUFBSSxFQUFFLENBQUNLLEdBQUcsRUFBRUMsTUFBTSxLQUFLO01BQ3ZFLElBQUksQ0FBQ0QsR0FBRyxFQUFFO1FBQ1JILE9BQU8sQ0FBQ0ksTUFBTSxDQUFDO01BQ2pCLENBQUMsTUFBTTtRQUNMSCxNQUFNLENBQUMsSUFBSU8sS0FBSyxDQUFFLFFBQU9MLEdBQUcsQ0FBQ00sVUFBVyxFQUFDLENBQUMsQ0FBQztNQUM3QztJQUNGLENBQUMsQ0FBQztFQUNKLENBQUMsQ0FBQztFQUVKRSxnQkFBZ0IsRUFBR0MsTUFBTSxJQUN2QixJQUFJYixPQUFPLENBQUMsQ0FBQ0MsT0FBTyxFQUFFQyxNQUFNLEtBQUs7SUFDL0JSLFVBQVUsQ0FBQ1MsS0FBSyxDQUNkLHdDQUF3QyxFQUN4Q1UsTUFBTSxFQUNOLENBQUNDLEtBQUssRUFBRVQsTUFBTSxLQUFLO01BQ2pCLElBQUksQ0FBQ1MsS0FBSyxFQUFFO1FBQ1ZiLE9BQU8sQ0FBQ0ksTUFBTSxDQUFDO01BQ2pCLENBQUMsTUFBTTtRQUNMSCxNQUFNLENBQUMsSUFBSU8sS0FBSyxDQUFFLFFBQU9LLEtBQUssQ0FBQ0osVUFBVyxFQUFDLENBQUMsQ0FBQztNQUMvQztJQUNGLENBQ0YsQ0FBQztFQUNILENBQUMsQ0FBQztFQUNKSyxVQUFVLEVBQUdSLEVBQUUsSUFDYixJQUFJUCxPQUFPLENBQUMsQ0FBQ0MsT0FBTyxFQUFFQyxNQUFNLEtBQUs7SUFDL0JSLFVBQVUsQ0FBQ1MsS0FBSyxDQUNkLG9DQUFvQyxFQUNwQ0ksRUFBRSxFQUNGLENBQUNPLEtBQUssRUFBRVQsTUFBTSxLQUFLO01BQ2pCLElBQUksQ0FBQ1MsS0FBSyxFQUFFO1FBQ1ZiLE9BQU8sQ0FBQ0ksTUFBTSxDQUFDO01BQ2pCLENBQUMsTUFBTSxJQUFJSSxLQUFLLENBQUUsT0FBTUssS0FBSyxDQUFDSixVQUFXLEVBQUMsQ0FBQztJQUM3QyxDQUNGLENBQUM7RUFDSCxDQUFDLENBQUM7RUFDSk0sV0FBVyxFQUFHVCxFQUFFLElBQ2QsSUFBSVAsT0FBTyxDQUFDLENBQUNDLE9BQU8sRUFBRUMsTUFBTSxLQUFLO0lBQy9CUixVQUFVLENBQUNTLEtBQUssQ0FDZCxnQ0FBZ0MsRUFDaENJLEVBQUUsRUFDRixDQUFDTyxLQUFLLEVBQUVULE1BQU0sS0FBSztNQUNqQixJQUFJLENBQUNTLEtBQUssRUFBRTtRQUNWYixPQUFPLENBQUNNLEVBQUUsQ0FBQztNQUNiLENBQUMsTUFBTTtRQUNMTCxNQUFNLENBQUMsSUFBSU8sS0FBSyxDQUFFLFNBQVFLLEtBQUssQ0FBQ0osVUFBVyxFQUFDLENBQUMsQ0FBQztNQUNoRDtJQUNGLENBQ0YsQ0FBQztFQUNILENBQUM7QUFDTCxDQUFDIn0=